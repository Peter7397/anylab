# Generated by Django 5.2.4 on 2025-08-10 00:04

import django.core.validators
import django.db.models.deletion
import pgvector.django
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('ai_assistant', '0005_weblink_knowledgeshare'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('file', models.FileField(blank=True, null=True, upload_to='documents/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'xls', 'xlsx', 'ppt', 'pptx', 'txt', 'rtf'])])),
                ('filename', models.CharField(blank=True, max_length=255, null=True)),
                ('document_type', models.CharField(choices=[('pdf', 'PDF Document'), ('doc', 'Word Document'), ('docx', 'Word Document'), ('xls', 'Excel Spreadsheet'), ('xlsx', 'Excel Spreadsheet'), ('ppt', 'PowerPoint Presentation'), ('pptx', 'PowerPoint Presentation'), ('txt', 'Text Document'), ('rtf', 'Rich Text Document')], default='pdf', max_length=10)),
                ('description', models.TextField(blank=True, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('page_count', models.IntegerField(default=0)),
                ('file_size', models.BigIntegerField(default=0)),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='QueryHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query', models.TextField()),
                ('response', models.TextField()),
                ('sources', models.JSONField(default=list)),
                ('query_type', models.CharField(choices=[('rag', 'RAG Search'), ('vector', 'Vector Search'), ('chat', 'Free Chat')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UploadedFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(max_length=255)),
                ('file_hash', models.CharField(db_index=True, max_length=64, unique=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('intro', models.TextField(blank=True, null=True)),
                ('file_size', models.BigIntegerField(default=0)),
                ('page_count', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.DeleteModel(
            name='AIConversationTemplate',
        ),
        migrations.RemoveField(
            model_name='aiusagelog',
            name='model',
        ),
        migrations.RemoveField(
            model_name='aiusagelog',
            name='session',
        ),
        migrations.RemoveField(
            model_name='aiusagelog',
            name='user',
        ),
        migrations.RemoveField(
            model_name='chatmessage',
            name='session',
        ),
        migrations.RemoveField(
            model_name='chatsession',
            name='user',
        ),
        migrations.RemoveField(
            model_name='knowledgedocument',
            name='uploaded_by',
        ),
        migrations.AlterModelOptions(
            name='documentchunk',
            options={'ordering': ['uploaded_file', 'page_number', 'chunk_index']},
        ),
        migrations.AlterModelOptions(
            name='knowledgeshare',
            options={},
        ),
        migrations.AlterModelOptions(
            name='pdfdocument',
            options={'ordering': ['-uploaded_at']},
        ),
        migrations.AlterModelOptions(
            name='weblink',
            options={'ordering': ['-created_at']},
        ),
        migrations.RemoveIndex(
            model_name='documentchunk',
            name='document_ch_documen_15f3c0_idx',
        ),
        migrations.RemoveIndex(
            model_name='weblink',
            name='ai_weblinks_created_at_idx',
        ),
        migrations.AlterUniqueTogether(
            name='documentchunk',
            unique_together=set(),
        ),
        migrations.RemoveField(
            model_name='knowledgeshare',
            name='updated_at',
        ),
        migrations.RemoveField(
            model_name='pdfdocument',
            name='is_processed',
        ),
        migrations.RemoveField(
            model_name='pdfdocument',
            name='processed_at',
        ),
        migrations.AddField(
            model_name='documentchunk',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name='documentchunk',
            name='embedding',
            field=pgvector.django.VectorField(blank=True, dimensions=384, null=True),
        ),
        migrations.AddField(
            model_name='documentchunk',
            name='page_number',
            field=models.IntegerField(default=1),
        ),
        migrations.AlterField(
            model_name='documentchunk',
            name='chunk_index',
            field=models.IntegerField(default=0),
        ),
        migrations.AlterField(
            model_name='knowledgeshare',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='knowledgeshare',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='knowledgeshare',
            name='share_token',
            field=models.CharField(blank=True, max_length=64, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='pdfdocument',
            name='file',
            field=models.FileField(upload_to='pdfs/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])]),
        ),
        migrations.AlterField(
            model_name='pdfdocument',
            name='file_size',
            field=models.BigIntegerField(default=0),
        ),
        migrations.AlterField(
            model_name='pdfdocument',
            name='page_count',
            field=models.IntegerField(default=0),
        ),
        migrations.AlterField(
            model_name='pdfdocument',
            name='uploaded_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='weblink',
            name='added_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='weblink',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='weblink',
            name='tags',
            field=models.JSONField(default=list),
        ),
        migrations.AlterField(
            model_name='weblink',
            name='url',
            field=models.URLField(),
        ),
        migrations.AlterModelTable(
            name='documentchunk',
            table=None,
        ),
        migrations.AlterModelTable(
            name='knowledgeshare',
            table=None,
        ),
        migrations.AlterModelTable(
            name='weblink',
            table=None,
        ),
        migrations.AddField(
            model_name='document',
            name='uploaded_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='queryhistory',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='uploadedfile',
            name='uploaded_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='documentchunk',
            name='uploaded_file',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pages', to='ai_assistant.uploadedfile'),
        ),
        migrations.DeleteModel(
            name='AIModel',
        ),
        migrations.DeleteModel(
            name='AIUsageLog',
        ),
        migrations.DeleteModel(
            name='ChatMessage',
        ),
        migrations.DeleteModel(
            name='ChatSession',
        ),
        migrations.RemoveField(
            model_name='documentchunk',
            name='document',
        ),
        migrations.RemoveField(
            model_name='documentchunk',
            name='embedding_vector',
        ),
        migrations.RemoveField(
            model_name='documentchunk',
            name='metadata',
        ),
        migrations.DeleteModel(
            name='KnowledgeDocument',
        ),
    ]
